#Author				:	Papaioannou Vassilis
#Last update		:	12/ 07/ 2016
#Previous update	:	none
#Platform			:	ASAP IReS
#Github				:	https://github.com/project-asap/IReS-Platform
################################################################################
#
#Description
#	Concrete version of an 'OutterSQL' operator.
#Description_End

#################
# CONFIGURATION #
#################
#Engine
Constraints.Engine=Spark
Constraints.EngineSpecification.Distributed.Spark.masterLocation=master
#Query
Constraints.OpSpecification.Algorithm.name=SQL_query
Constraints.OpSpecification.SQL_query="select sum(l_extendedprice) / 7.0 as avg_yearly from lineitem, part, part_agg where p_partkey = l_partkey and agg_partkey = l_partkey and p_brand = 'Brand#33' and p_container = 'MED BAG' and l_quantity < avg_quantity LIMIT 1;"
#Inputs
Constraints.Input.number = 2
#Input0
Constraints.Input0.type = SQL
Constraints.Input0.Engine.SQL=Spark
Constraints.Input0.Engine.location=master
#Input1
Constraints.Input1.type = SQL
Constraints.Input1.Engine.SQL=Spark
Constraints.Input1.Engine.location=master
#Input2
#Constraints.Input2.type = SQL
#Constraints.Input2.Engine.SQL=Spark
#Constraints.Input2.Engine.location=master
#Outputs
Constraints.Output.number = 1
#Output0
Constraints.Output0.type = SQL
Constraints.Output0.Engine.SQL=Spark
Constraints.Output0.Engine.location=master

#################
# OPTIMIZATION #
#################
#OPTIMIZATION DIMENSIONS( mandatory, at least one)
Optimization.inputSpace.In0.size=Double,1,20,5
#OPTIMIZATION METRIC( mandatory)
Optimization.outputSpace.execTime=Double
Optimization.outputSpace.Out0.size=Double
Optimization.outputSpace.cost=Double
#optimization metric function
Optimization.model.execTime=gr.ntua.ece.cslab.panic.core.models.AbstractWekaModel
#Optimization.model.execTime=gr.ntua.ece.cslab.panic.core.models.UserFunction
#Optimization.execTime=2500.0
Optimization.model.Out0.size=gr.ntua.ece.cslab.panic.core.models.UserFunction
Optimization.Out0.size=(In0.size)*0.1
Optimization.model.cost=gr.ntua.ece.cslab.panic.core.models.UserFunction
Optimization.cost=25.0

#################
#   EXECUTION   #
#################
Execution.LuaScript=OutterSQL_Spark.lua
Execution.Arguments.number=5
Execution.Argument0=spark://master:7077
Execution.Argument1=executeOutterSQL.py
Execution.Argument2=master
Execution.Argument3=/home/hadoop/yarn
Execution.Argument4=tpchQuery17OutterSpark.sql
Execution.Output0.name=finalParquet
Execution.Output0.schema=( avg_yearly decimal( 10, 2))
